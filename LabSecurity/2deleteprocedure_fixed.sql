create or replace PROCEDURE deleteIfNoCreditOrBlnceIsNull IS

BEGIN

DELETE FROM
OPERATION
WHERE ID_ACCOUNT_RECEIVER IN (
  SELECT ACCOUNT.ID
FROM ACCOUNT
WHERE ID_CUSTOMER IN (

    SELECT ID FROM CUSTOMER WHERE
(
  (ID NOT IN (SELECT ID_CUSTOMER FROM OPERATION) ) AND
  (ID NOT IN (SELECT id_account_sender FROM OPERATION) ) AND
  (ID NOT IN (SELECT id_account_receiver FROM OPERATION) )
)
UNION
SELECT C1.ID
FROM CUSTOMER C1
    LEFT JOIN LOAN L ON C1.ID = L.ID_CUSTOMER
        FULL JOIN ACCOUNT ON C1.ID = ACCOUNT.ID_CUSTOMER
        FULL JOIN OPERATION O2 on ACCOUNT.ID = O2.ID_ACCOUNT_RECEIVER
                    FULL JOIN OPERATION O3 on ACCOUNT.ID = O3.ID_ACCOUNT_SENDER
WHERE L.ID IS NULL
GROUP BY C1.ID, L.ID
HAVING (SUM(O2.AMOUNT_TRANSFER) - SUM(O3.AMOUNT_TRANSFER)) = 0)
) OR ID_ACCOUNT_SENDER IN  (
  
  SELECT ACCOUNT.ID
FROM ACCOUNT
WHERE ID_CUSTOMER IN (

    SELECT ID FROM CUSTOMER WHERE
(
  (ID NOT IN (SELECT ID_CUSTOMER FROM OPERATION) ) AND
  (ID NOT IN (SELECT id_account_sender FROM OPERATION) ) AND
  (ID NOT IN (SELECT id_account_receiver FROM OPERATION) )
)
UNION
SELECT C1.ID
FROM CUSTOMER C1
    LEFT JOIN LOAN L ON C1.ID = L.ID_CUSTOMER
        FULL JOIN ACCOUNT ON C1.ID = ACCOUNT.ID_CUSTOMER
        FULL JOIN OPERATION O2 on ACCOUNT.ID = O2.ID_ACCOUNT_RECEIVER
                    FULL JOIN OPERATION O3 on ACCOUNT.ID = O3.ID_ACCOUNT_SENDER
WHERE L.ID IS NULL
GROUP BY C1.ID, L.ID
HAVING (SUM(O2.AMOUNT_TRANSFER) - SUM(O3.AMOUNT_TRANSFER)) = 0));



DELETE
FROM ACCOUNT
WHERE ID_CUSTOMER IN (

    SELECT ID FROM CUSTOMER WHERE
(
  (ID NOT IN (SELECT ID_CUSTOMER FROM OPERATION) ) AND
  (ID NOT IN (SELECT id_account_sender FROM OPERATION) ) AND
  (ID NOT IN (SELECT id_account_receiver FROM OPERATION) )
)
UNION
SELECT C1.ID
FROM CUSTOMER C1
    LEFT JOIN LOAN L ON C1.ID = L.ID_CUSTOMER
        FULL JOIN ACCOUNT ON C1.ID = ACCOUNT.ID_CUSTOMER
        FULL JOIN OPERATION O2 on ACCOUNT.ID = O2.ID_ACCOUNT_RECEIVER
                    FULL JOIN OPERATION O3 on ACCOUNT.ID = O3.ID_ACCOUNT_SENDER
WHERE L.ID IS NULL
GROUP BY C1.ID, L.ID
HAVING (SUM(O2.AMOUNT_TRANSFER) - SUM(O3.AMOUNT_TRANSFER)) = 0);

COMMIT;


DELETE
FROM OPERATION
WHERE ID_CUSTOMER IN (

    SELECT ID FROM CUSTOMER WHERE
(
  (ID NOT IN (SELECT ID_CUSTOMER FROM OPERATION) ) AND
  (ID NOT IN (SELECT id_account_sender FROM OPERATION) ) AND
  (ID NOT IN (SELECT id_account_receiver FROM OPERATION) )
)
UNION
SELECT C1.ID
FROM CUSTOMER C1
    LEFT JOIN LOAN L ON C1.ID = L.ID_CUSTOMER
        FULL JOIN ACCOUNT ON C1.ID = ACCOUNT.ID_CUSTOMER
        FULL JOIN OPERATION O2 on ACCOUNT.ID = O2.ID_ACCOUNT_RECEIVER
                    FULL JOIN OPERATION O3 on ACCOUNT.ID = O3.ID_ACCOUNT_SENDER
WHERE L.ID IS NULL
GROUP BY C1.ID, L.ID
HAVING (SUM(O2.AMOUNT_TRANSFER) - SUM(O3.AMOUNT_TRANSFER)) = 0);

COMMIT;

DELETE FROM CUSTOMER
WHERE ID in (
    SELECT ID FROM CUSTOMER WHERE
(
  (ID NOT IN (SELECT ID_CUSTOMER FROM OPERATION) ) AND
  (ID NOT IN (SELECT id_account_sender FROM OPERATION) ) AND
  (ID NOT IN (SELECT id_account_receiver FROM OPERATION) )
)
UNION
SELECT C1.ID
FROM CUSTOMER C1
    LEFT JOIN LOAN L ON C1.ID = L.ID_CUSTOMER
        FULL JOIN ACCOUNT ON C1.ID = ACCOUNT.ID_CUSTOMER
        FULL JOIN OPERATION O2 on ACCOUNT.ID = O2.ID_ACCOUNT_RECEIVER
                    FULL JOIN OPERATION O3 on ACCOUNT.ID = O3.ID_ACCOUNT_SENDER
WHERE L.ID IS NULL
GROUP BY C1.ID, L.ID
HAVING (SUM(O2.AMOUNT_TRANSFER) - SUM(O3.AMOUNT_TRANSFER)) = 0
);
  
COMMIT;
END;